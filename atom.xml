<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lucky Dog&#39;s blogs</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-08-08T14:20:45.764Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot发送邮件</title>
    <link href="http://example.com/post/f5937762.html"/>
    <id>http://example.com/post/f5937762.html</id>
    <published>2022-08-08T06:15:43.000Z</published>
    <updated>2022-08-08T14:20:45.764Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下，Spring Boot如何发送邮件。分为以下五种</p><ul><li>发送文本邮件</li><li>发送html邮件</li><li>发送附件邮件</li><li>发送图片邮件</li><li>发送模板邮件</li></ul><h1 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h1><p>引入maven坐标。<code>spring-boot-starter-mail</code>、<code>spring-boot-starter-thymeleaf</code>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--模板引擎--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--模板引擎--&gt;</span></span><br></pre></td></tr></table></figure><p>配置配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.qq.com</span> <span class="comment">#smtp.126.com</span></span><br><span class="line">    <span class="attr">username:</span> <span class="number">928301810</span><span class="string">@qq.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">····</span> <span class="comment">#POP3授权码</span></span><br><span class="line">    <span class="attr">default-encoding:</span> <span class="string">UTF-8</span></span><br></pre></td></tr></table></figure><p>这里的password，并不是你邮箱的登录密码，而是POP3授权码。</p><h2 id="配置邮箱（以qq邮箱为例）"><a href="#配置邮箱（以qq邮箱为例）" class="headerlink" title="配置邮箱（以qq邮箱为例）"></a>配置邮箱（以qq邮箱为例）</h2><p>点击邮箱的设置，然后点击账户</p><p><img src="/%5Cimage%5Carticle%5CSpringBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%5Cimage-20220808212318162.png" alt="image-20220808212318162"></p><p>将获取的POP3授权码，设置到配置文件中。</p><h1 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h1><p>注入<code>JavaMailSender</code>对象，这是一个接口。然后获取配置文件中<code>username</code>配置信息。作为发送方</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> JavaMailSender sender;</span><br></pre></td></tr></table></figure><h2 id="发送文本文件"><a href="#发送文本文件" class="headerlink" title="发送文本文件"></a>发送文本文件</h2><p>Service层</p><p>这里先用<code>SimpleMailMessage</code>对象，封装消息，包括：发送方，接收方、邮件主题、邮件内容。</p><p>然后使用<code>JavaMailSender</code>对象，发送消息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">MailService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender sender;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendmail</span><span class="params">(String to, String subject, String content)</span> &#123;</span><br><span class="line">        <span class="type">SimpleMailMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleMailMessage</span>();</span><br><span class="line">        message.setTo(to);</span><br><span class="line">        message.setSubject(subject);</span><br><span class="line">        message.setText(content);</span><br><span class="line">        message.setFrom(from);</span><br><span class="line"></span><br><span class="line">        sender.send(message);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">    service.sendmail(<span class="string">&quot;928301810@qq.com&quot;</span>,<span class="string">&quot;HELLO&quot;</span>,<span class="string">&quot;这是我用SrongBoot发送的第一封邮件&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>to：收件方</li><li>subject：邮件主题</li><li>content：邮件内容</li></ul><h2 id="发送html文件"><a href="#发送html文件" class="headerlink" title="发送html文件"></a>发送html文件</h2><p>Service层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">MailService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender sender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendhtml</span><span class="params">(String to, String subject, String content)</span> <span class="keyword">throws</span> MessagingException &#123;</span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> sender.createMimeMessage();</span><br><span class="line">        <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message,<span class="literal">true</span>);</span><br><span class="line">        helper.setFrom(from);</span><br><span class="line">        helper.setTo(to);</span><br><span class="line">        helper.setSubject(subject);</span><br><span class="line">        helper.setText(content,<span class="literal">true</span>);</span><br><span class="line">        sender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是使用<code>JavaMailSender</code>的<code>createMimeMessage</code>方法，来获取<code>MimeMessage</code>对象。</p><p><code>MimeMessageHelper</code>的构造方法的两个参数，一个是<code>message</code>，另一个是<code>true</code>。</p><p>true表示发送的邮件是<code>multipart邮件</code>。简单来说，<code>multpart</code>是一种可以内嵌html，包含附件的邮件类型。</p><p>然后测试代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">TestSendHTML</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&lt;html&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;body&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;h3&gt;这是我用SrongBoot发送的第二封邮件&lt;/h3&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;/body&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;/html&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    service.sendhtml(<span class="string">&quot;928301810@qq.com&quot;</span>,<span class="string">&quot;HELLO&quot;</span>,content);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="发送带附件的邮件"><a href="#发送带附件的邮件" class="headerlink" title="发送带附件的邮件"></a>发送带附件的邮件</h2><p>Service层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">MailService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender sender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendhtmlwithFile</span><span class="params">(String to, String subject, String content, String[] filepaths)</span> <span class="keyword">throws</span> MessagingException, FileNotFoundException &#123;</span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> sender.createMimeMessage();</span><br><span class="line">        <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message,<span class="literal">true</span>);</span><br><span class="line">        helper.setFrom(from);</span><br><span class="line">        helper.setTo(to);</span><br><span class="line">        helper.setSubject(subject);</span><br><span class="line">        helper.setText(content,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String filepath : filepaths) &#123;</span><br><span class="line">            <span class="type">FileSystemResource</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileSystemResource</span>(<span class="keyword">new</span> <span class="title class_">File</span>(filepath));</span><br><span class="line">            <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> file.getFilename();</span><br><span class="line">            <span class="keyword">assert</span> filename != <span class="literal">null</span>;</span><br><span class="line">            helper.addAttachment(filename,file);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从参数<code>String[] filepaths</code>,可以看出，它是可以携带多个附件的。与发送html不同的是，多了如下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (String filepath : filepaths) &#123;</span><br><span class="line">    <span class="type">FileSystemResource</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileSystemResource</span>(<span class="keyword">new</span> <span class="title class_">File</span>(filepath));</span><br><span class="line">    <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> file.getFilename();</span><br><span class="line">    <span class="keyword">assert</span> filename != <span class="literal">null</span>;</span><br><span class="line">    helper.addAttachment(filename,file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试代码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">TestSendwithFile</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException, FileNotFoundException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&lt;html&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;body&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;h3&gt;这是我用SrongBoot发送的第三封带附件的邮件&lt;/h3&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;/body&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;/html&gt;&quot;</span>;</span><br><span class="line">    String[] filepaths = &#123;<span class="string">&quot;C:\\Users\\TJS\\Desktop\\力扣算法题链接.md&quot;</span>, <span class="string">&quot;C:\\Users\\TJS\\Desktop\\nginx-1.16.1.tar.gz&quot;</span>&#125;;</span><br><span class="line">    service.sendhtmlwithFile(<span class="string">&quot;928301810@qq.com&quot;</span>,<span class="string">&quot;HELLO&quot;</span>,content, filepaths);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="发送带有图片的邮件"><a href="#发送带有图片的邮件" class="headerlink" title="发送带有图片的邮件"></a>发送带有图片的邮件</h2><p>Service层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">MailService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender sender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendImage</span><span class="params">(String to, String subject, String content,String[][] images)</span> <span class="keyword">throws</span> MessagingException &#123;</span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> sender.createMimeMessage();</span><br><span class="line">        <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message,<span class="literal">true</span>);</span><br><span class="line">        helper.setFrom(from);</span><br><span class="line">        helper.setTo(to);</span><br><span class="line">        helper.setSubject(subject);</span><br><span class="line">        helper.setText(content,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String[] image : images) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> image[<span class="number">0</span>];</span><br><span class="line">            <span class="type">String</span> <span class="variable">rscId</span> <span class="operator">=</span> image[<span class="number">1</span>];</span><br><span class="line">            <span class="type">FileSystemResource</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileSystemResource</span>(<span class="keyword">new</span> <span class="title class_">File</span>(path));</span><br><span class="line">            helper.addInline(rscId,resource);</span><br><span class="line">        &#125;</span><br><span class="line">        sender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以内嵌多张图片，传入images字符串数组。</p><p><code>images[i][0]</code>：图片的路径，可以是绝对路径，也可以是相对路径。</p><p><code>images[i][1]</code>：图片的id。因为它内嵌到邮件中，实际就是以html的方式内嵌到邮件中，因此需要使用<code>&lt;img&gt;</code>标签</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">TestSendImage</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException &#123;</span><br><span class="line">    String[][]  images = <span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;</span><br><span class="line">            &#123;<span class="string">&quot;src/main/resources/static/2.JPG&quot;</span>,<span class="string">&quot;002&quot;</span>&#125;,</span><br><span class="line">            &#123;<span class="string">&quot;src/main/resources/static/3.JPG&quot;</span>,<span class="string">&quot;003&quot;</span>&#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">content</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;&lt;html&gt;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;body&gt;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;h3&gt;这是我用SrongBoot发送的第四封带图片的邮件&lt;/h3&gt;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//-------------------------------------------------------------------------------</span></span><br><span class="line">    <span class="keyword">for</span> (String[] image : images) &#123;</span><br><span class="line">        content.append(<span class="string">&quot;&lt;img src=&#x27;cid:&quot;</span>).append(image[<span class="number">1</span>]).append(<span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//&lt;img src=&quot;cid:image[1]&quot;&gt;&lt;/img&gt;</span></span><br><span class="line">    <span class="comment">//----------------------------------------------------------------------------------</span></span><br><span class="line">    </span><br><span class="line">    content.append(<span class="string">&quot;&lt;/body&gt;\n&quot;</span>+ <span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    service.sendImage(<span class="string">&quot;928301810@qq.com&quot;</span>,<span class="string">&quot;HELLO&quot;</span>, content.toString(),images);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="发送模板邮件"><a href="#发送模板邮件" class="headerlink" title="发送模板邮件"></a>发送模板邮件</h1><p>生活中有很多场景特别适用模板邮件，比如：</p><ul><li>用户注册</li><li>忘记密码</li></ul><p>这些邮件都有一个特点：邮件的主体内容不会变化，变化的是用户的信息。在这个使用的模板引擎是：<code>thymeleaf</code>。</p><p>maven坐标已经再前面引入。service层使用发送html的就可以。</p><p>然后再resouce的templates文件夹中，创建html模板。</p><img src="\image\article\SpringBoot发送邮件\image-20220808215552489.png" alt="image-20220808215552489" style="zoom:80%;" /><p>html代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--声明thymeleaf--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    必须闭合 meta标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>邮件模板<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    您好，感谢您的注册，这是一封验证邮件，请点击下面的链接完成注册，感谢您的支持！</span><br><span class="line">    <span class="comment">&lt;!--/*@thymesVar id=&quot;id&quot; type=&quot;java&quot;*/--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;http://www.ityouknow.com/register/&#123;id&#125;(id=$&#123;id&#125;)&#125;&quot;</span>&gt;</span>激活账号<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以看到只有<code>id</code>是变化的。<code>&#123;id&#125;(id=$&#123;id&#125;)</code></p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpringbootMailApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MailService service;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TemplateEngine templateEngine;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">TestTemplete</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException &#123;</span><br><span class="line">        <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Context</span>();</span><br><span class="line">        context.setVariable(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;006&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">emailTemplate</span> <span class="operator">=</span> templateEngine.process(<span class="string">&quot;EmailTemplate&quot;</span>, context);</span><br><span class="line">        service.sendhtml(<span class="string">&quot;928301810@qq.com&quot;</span>,<span class="string">&quot;HELLO&quot;</span>,emailTemplate);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要注入<code>TemplateEngine</code>来解析html模板。</p><p>创建Context对象，来封装变量。然后使用<code>TemplateEngine</code>来解析模板，因此需要传入<code>Context</code>对象。</p><h1 id="关于异常的处理"><a href="#关于异常的处理" class="headerlink" title="关于异常的处理"></a>关于异常的处理</h1><p>我们看到，在发送邮件过程中，会产生例如<code>MessagingException</code>异常。我们处理的方法是不断的向外抛。</p><p>但在项目中的操作通常是一个异步的操作，因此它不必要去影响主业务。因此这个异常需要我们自己来处理，而不是统统抛出去。这种情况下，我们需要使用Log，以日志的形式记录下来。</p><p>以发送HTML邮件的代码为例，原代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">MailService</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender sender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendhtml</span><span class="params">(String to, String subject, String content)</span> <span class="keyword">throws</span> MessagingException &#123;</span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> sender.createMimeMessage();</span><br><span class="line">        <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message,<span class="literal">true</span>);</span><br><span class="line">        helper.setFrom(from);</span><br><span class="line">        helper.setTo(to);</span><br><span class="line">        helper.setSubject(subject);</span><br><span class="line">        helper.setText(content,<span class="literal">true</span>);</span><br><span class="line">        sender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>try···catch</code>来捕获异常，并记录日志</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">MailService</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(<span class="built_in">this</span>.getClass());<span class="comment">//日志对象</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender sender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendhtml</span><span class="params">(String to, String subject, String content)</span> &#123;</span><br><span class="line">        logger.info(<span class="string">&quot;发送静态邮件开始,接收方&#123;&#125;,&#123;&#125;&quot;</span>,to,subject);</span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> sender.createMimeMessage();</span><br><span class="line">        <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            helper = <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message,<span class="literal">true</span>);</span><br><span class="line">            helper.setFrom(from);</span><br><span class="line">            helper.setTo(to);</span><br><span class="line">            helper.setSubject(subject);</span><br><span class="line">            helper.setText(content,<span class="literal">true</span>);</span><br><span class="line">            sender.send(message);</span><br><span class="line">            logger.info(<span class="string">&quot;发送成功！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MessagingException e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;发送失败,&#123;&#125;&quot;</span>,e.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h1><ul><li>421 HL:ICC该IP同时并发连接数过大</li><li>451 Requested mail action not taken: too much fail …登录失败次数过多,被临时禁止登录。</li><li>553 authentication is required 认证失败【账号密码有可能不对，或者协议配置不对，等等】</li></ul><p>参考地址:<a href="http://help.163.com/09/1224/17/5RAJ4LMHO0753VB8.html%E3%80%90%E5%AE%83%E4%BC%9A%E5%AF%B9%E6%AF%8F%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E8%BF%9B%E8%A1%8C%E8%A7%A3%E9%87%8A%E3%80%91">http://help.163.com/09/1224/17/5RAJ4LMHO0753VB8.html【它会对每一个错误进行解释】</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记录一下，Spring Boot如何发送邮件。分为以下五种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发送文本邮件&lt;/li&gt;
&lt;li&gt;发送html邮件&lt;/li&gt;
&lt;li&gt;发送附件邮件&lt;/li&gt;
&lt;li&gt;发送图片邮件&lt;/li&gt;
&lt;li&gt;发送模板邮件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;配置</summary>
      
    
    
    
    <category term="Spring" scheme="http://example.com/category/Spring/"/>
    
    
    <category term="发送邮件" scheme="http://example.com/tag/%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot配置文件属性提示消失解决方案</title>
    <link href="http://example.com/post/34ca02aa.html"/>
    <id>http://example.com/post/34ca02aa.html</id>
    <published>2022-08-06T07:42:58.000Z</published>
    <updated>2022-08-06T08:41:33.766Z</updated>
    
    <content type="html"><![CDATA[<img src="\image\article\SpringBoot配置文件属性提示消失解决方案\image-20220806154540571.png" alt="image-20220806154540571" style="zoom: 67%;" /><p>当在SpringBoot中书写配置文件时，没有自动弹提示。</p><p>原因是：SpringBoot在IDEA环境下，提供的功能失效</p><p>解决方案：</p><p>File—-&gt;Project Structure</p><img src="\image\article\SpringBoot配置文件属性提示消失解决方案\image-20220806154818040.png" alt="image-20220806154818040" style="zoom:50%;" /><p>或者：</p><p>右上角的</p><p><img src="/%5Cimage%5Carticle%5CSpringBoot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E6%8F%90%E7%A4%BA%E6%B6%88%E5%A4%B1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%5Cimage-20220806154842981.png" alt="image-20220806154842981"></p><p>点击进入如下界面</p><img src="\image\article\SpringBoot配置文件属性提示消失解决方案\image-20220806154958032.png" alt="image-20220806154958032" style="zoom:80%;" /><img src="\image\article\SpringBoot配置文件属性提示消失解决方案\image-20220806155058176.png" alt="image-20220806155058176" style="zoom:80%;" /><img src="\image/article\SpringBoot配置文件属性提示消失解决方案\image-20220806155138121.png" alt="image-20220806155138121" style="zoom:80%;" /><p>然后一直OK就好。</p><p>然后就可以解决了。</p><p><img src="/%5Cimage%5Carticle%5CSpringBoot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E6%8F%90%E7%A4%BA%E6%B6%88%E5%A4%B1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%5Cimage-20220806155409207.png" alt="image-20220806155409207"></p><p>图标都变了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;\image\article\SpringBoot配置文件属性提示消失解决方案\image-20220806154540571.png&quot; alt=&quot;image-20220806154540571&quot; style=&quot;zoom: 67%;&quot; /&gt;

&lt;p&gt;当在Spr</summary>
      
    
    
    
    <category term="Spring" scheme="http://example.com/category/Spring/"/>
    
    
    <category term="属性提示消失解决方案" scheme="http://example.com/tag/%E5%B1%9E%E6%80%A7%E6%8F%90%E7%A4%BA%E6%B6%88%E5%A4%B1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot读取Yaml配置</title>
    <link href="http://example.com/post/31902768.html"/>
    <id>http://example.com/post/31902768.html</id>
    <published>2022-08-06T07:12:14.000Z</published>
    <updated>2022-08-08T02:43:45.197Z</updated>
    
    <content type="html"><![CDATA[<p>读取配置文件内容三种方式：</p><ul><li>@Value</li><li>Environment</li><li>@ConfigurationProperties</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对象形式</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">zhangsan</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">23</span></span><br><span class="line">  <span class="attr">address:</span> <span class="string">xian</span></span><br><span class="line"><span class="comment">#数组格式</span></span><br><span class="line"><span class="attr">object:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">JAVA</span><span class="comment">#- 和 数据用空格分离</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">大数据</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">前端</span></span><br><span class="line"><span class="comment">#字面量  </span></span><br><span class="line"><span class="attr">name:</span> <span class="string">yamiedie</span></span><br></pre></td></tr></table></figure><h1 id="Value方式"><a href="#Value方式" class="headerlink" title="@Value方式"></a>@Value方式</h1><p>需要配置SpEL表达式，<code>$&#123;一级属性名.二级属性名&#125;</code></p><p>​<img src="/%5Cimage%5Carticle%5CSpringBoot%E8%AF%BB%E5%8F%96Yaml%E9%85%8D%E7%BD%AE%5Cimage-20220806160931458.png" alt="image-20220806160931458"></p><ul><li><p>对象形式</p><ul><li>&#96;&#96;&#96;java<br>@Value(“${server.port}”)<br>private int port;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 数组形式</span><br><span class="line"></span><br><span class="line">  - ```java</span><br><span class="line">    @Value(&quot;$&#123;object[1]&#125;&quot;)</span><br><span class="line">    private String object;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>普通形式</p><ul><li>&#96;&#96;&#96;yaml<br>@Value(“${name}”)<br>private String name;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># Environment方式</span><br><span class="line"></span><br><span class="line">首先要进行Bean注入</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">@Autowired</span><br><span class="line">private Environment env;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>SpringBoot会通过数据装配的方式把数据全部装到这一个对象里。</p><p>使用<code>getProperty</code>，方法获取属性值。</p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(env.getProperty(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">System.out.println(env.getProperty(<span class="string">&quot;server.port&quot;</span>));</span><br><span class="line">System.out.println(env.getProperty(<span class="string">&quot;object[1]&quot;</span>));</span><br></pre></td></tr></table></figure><h1 id="ConfigurationProperties方式"><a href="#ConfigurationProperties方式" class="headerlink" title="@ConfigurationProperties方式"></a>@ConfigurationProperties方式</h1><p>使用@ConfigurationProperties注解绑定配置信息到<strong>封装类</strong>中</p><p>例如：</p><p>Yaml配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">datasource:</span></span><br><span class="line">  <span class="attr">driver:</span> <span class="string">com.driver.cj.mysql</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">me</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">you</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">he</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">she</span></span><br></pre></td></tr></table></figure><p>如果有警告，可以在pom文件中，加入如下依赖。【在classpath中没有发现SpringBoot 配置注解处理器】</p><p><img src="/%5Cimage%5Carticle%5CSpringBoot%E8%AF%BB%E5%8F%96Yaml%E9%85%8D%E7%BD%AE%5Cimage-20220806163710093.png" alt="image-20220806163710093"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>必须加<font color="gold"><strong>@Component</strong></font>注解，注入到Spring容器中。</li><li>prefix属性为一级属性名</li><li>类中必须有Getter和Setter方法，否则无法注入.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;datasource&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mydatasource</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String driver;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String[] user;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDriver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> driver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDriver</span><span class="params">(String driver)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.driver = driver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUrl</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUrl</span><span class="params">(String url)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String[] getUser() &#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUser</span><span class="params">(String[] user)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Mydatasource&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;driver=&#x27;&quot;</span> + driver + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, url=&#x27;&quot;</span> + url + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">SpringBoot读取Yaml配置的三种方式</summary>
    
    
    
    <category term="Spring" scheme="http://example.com/category/Spring/"/>
    
    
    <category term="Yaml" scheme="http://example.com/tag/Yaml/"/>
    
  </entry>
  
  <entry>
    <title>Yaml基础语法</title>
    <link href="http://example.com/post/4b1a62b9.html"/>
    <id>http://example.com/post/4b1a62b9.html</id>
    <published>2022-08-06T07:11:45.000Z</published>
    <updated>2022-08-06T08:41:33.764Z</updated>
    
    <content type="html"><![CDATA[<h1 id="YAML基础语法"><a href="#YAML基础语法" class="headerlink" title="YAML基础语法"></a>YAML基础语法</h1><ul><li>大小写敏感</li><li>数据值前边必须有空格，作为分隔符</li><li>使用缩进表示层级关系</li><li>缩进时<strong>不允许使用Tab键</strong>，只允许使用空格【各个系统Tab对应的空格数目可能不同，导致层次混乱】。</li><li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li><li>#表示注释，从这个字符一直到行尾，都会被解析器忽略。</li></ul><p><strong>核心规则：数据前面要加空格与冒号隔开</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">name:</span> <span class="string">yamiedie</span></span><br></pre></td></tr></table></figure><h2 id="字面值表示方式"><a href="#字面值表示方式" class="headerlink" title="字面值表示方式"></a>字面值表示方式</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">boolean:</span> <span class="literal">TRUE</span><span class="comment">#TRUE ,true ,True , FALSE,false , False均可</span></span><br><span class="line"><span class="attr">float:</span> <span class="number">3.14</span><span class="comment">#6.8523015e+5#支持科学计数法</span></span><br><span class="line"><span class="attr">int:</span> <span class="number">123</span><span class="comment">#0b1010_0111_0100_1010_1110#支持二进制、八进制、十六进制</span></span><br><span class="line"><span class="attr">null:</span> <span class="string">~</span><span class="comment">#使用~表示null</span></span><br><span class="line"><span class="attr">string:</span> <span class="string">Helloworld</span><span class="comment">#字符串可以直接书写</span></span><br><span class="line"><span class="attr">string2:</span> <span class="string">&quot;Hello world&quot;</span><span class="comment">#可以使用双引号包裹特殊字符</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-02-17</span><span class="comment">#日期必须使用yyyy-MM-dd格式</span></span><br><span class="line"><span class="attr">datetime:</span> <span class="number">2022-02-17T15:02:31+08:00</span><span class="comment">#时间和日期之间使用T连接，最后使用+代表时区</span></span><br></pre></td></tr></table></figure><h1 id="YAML数据格式"><a href="#YAML数据格式" class="headerlink" title="YAML数据格式"></a>YAML数据格式</h1><ul><li><p>对象(map)：键值对集合</p><ul><li>&#96;&#96;&#96;yaml<br>#对象形式<br>user:<br>  name: zhangsan<br>  age: 23<br>  address: xian<br>#行内写法<br>user: {name: lisi,age: 22,address: beijing}<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 数组：一组按次序排列的值</span><br><span class="line"></span><br><span class="line">  - ```yaml</span><br><span class="line">    object:</span><br><span class="line">      - JAVA#- 和 数据用空格分离</span><br><span class="line">      - 大数据</span><br><span class="line">      - 前端</span><br><span class="line">    #行内写法</span><br><span class="line">    object: [JAVA,大数据,前端]</span><br><span class="line">    #==========================================</span><br><span class="line">    #数组对象格式</span><br><span class="line">    users:</span><br><span class="line">      -</span><br><span class="line">        name: TJS</span><br><span class="line">        age: 18</span><br><span class="line">      -</span><br><span class="line">        name: ZLX</span><br><span class="line">        age: 23</span><br><span class="line">    #对象数组缩略格式</span><br><span class="line">    users2: [&#123;name:TJS,age23&#125;,&#123;name:ZLX,age:22&#125;]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>纯量：单个的、不可再分的值</p><ul><li>&#96;&#96;&#96;yaml<br>address1: “中国 \n 西安” #双引号  识别转义字符<br>address2: ‘中国 \n 西安’#单引号  忽略转义字符<br>#也可以不加 引号<br>city1: “中国 西安”#有空格就加双引号<br>city2: 中国西安<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 参数引用</span><br><span class="line"></span><br><span class="line">  使用`$&#123;变量名&#125;`，来进行变量引用</span><br><span class="line"></span><br><span class="line">  - ```yaml</span><br><span class="line">    BaseDir: D:/windows</span><br><span class="line">    SpecificDir:</span><br><span class="line">      one: $&#123;BaseDir&#125;/temp</span><br><span class="line">      two: $&#123;BaseDir&#125;/nmp</span><br><span class="line">      three : &quot;$&#123;BaseDir&#125;/temp&quot;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>其他</p><p>还可以混合使用哦</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">enterprise:</span></span><br><span class="line">   <span class="attr">name :</span> <span class="string">itcast</span></span><br><span class="line">   <span class="attr">age:</span> <span class="number">16</span></span><br><span class="line">   <span class="attr">subject:</span></span><br><span class="line">       <span class="bullet">-</span> <span class="string">Java</span></span><br><span class="line">       <span class="bullet">-</span> <span class="string">前端</span></span><br><span class="line">       <span class="bullet">-</span> <span class="string">大数据</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">Yaml的基本的书写格式</summary>
    
    
    
    <category term="Spring" scheme="http://example.com/category/Spring/"/>
    
    
    <category term="Yaml" scheme="http://example.com/tag/Yaml/"/>
    
  </entry>
  
  <entry>
    <title>nginx命令和配置文件</title>
    <link href="http://example.com/post/994b7c8f.html"/>
    <id>http://example.com/post/994b7c8f.html</id>
    <published>2022-08-04T08:13:27.000Z</published>
    <updated>2022-08-04T15:43:22.396Z</updated>
    
    <content type="html"><![CDATA[<p>声明：使用的<code>CentOS7</code>操作系统</p><h1 id="Nginx命令"><a href="#Nginx命令" class="headerlink" title="Nginx命令"></a>Nginx命令</h1><p>执行<code>nginx</code>命令，需要在命令需要使用<code>nginx/sbin</code>目录下的<code>naginx</code>文件。可以是<font color="red"><strong>相对路径</strong></font>或者<font color="red"><strong>绝对路径</strong></font></p><p>首先进入到<code>nginx/sbin</code>目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/nginx/sbin</span><br></pre></td></tr></table></figure><p>配置<code>Nginx</code>环境变量，就可以在任意目录使用<code>nginx</code>命令了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>在PATH后追加<code>/usr/local/nginx/sbin:</code>，然后保存退出就好了。</p><p>然后<code>source /etc/profile</code>，然他立即生效。</p><p><font color="blue" size=5><strong>查看版本命令:</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx -v</span><br><span class="line"></span><br><span class="line">[root@bogon sbin]<span class="comment"># nginx -v</span></span><br><span class="line">nginx version: nginx/1.18.0</span><br></pre></td></tr></table></figure><p><font color="blue" size= 5><strong>检查配置文件的正确性</strong></font></p><p>在启动<code>Nginx</code>服务之前，可以先检查一下<code>conf/nginx.conf</code>配置文件是否有错误。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nginx -t   <span class="comment">#t 是 test</span></span><br><span class="line"></span><br><span class="line">[root@bogon sbin]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><p><font color="blue" size= 5><strong>启动和停止</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">niginx<span class="comment">#启动nginx服务</span></span><br><span class="line">ngi  <span class="comment">#停止nginx服务</span></span><br><span class="line">ps -ef|grep nginx<span class="comment">#启动完成后查看Nginx进程</span></span><br></pre></td></tr></table></figure><p>查看<code>nginx</code>进程,可以的看到有两个进程，第三个是我们执行这条命令对应的进程，可以忽略。<strong>主要看前面两条</strong></p><p>启动完成会有两个进程，一个<code>work</code>进程和一个<code>master</code>进程，可以通过**修改配置文件[<code>conf/nginx.conf</code>]**，添加更多<code>work</code>进程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon sbin]<span class="comment"># ps -ef|grep nginx</span></span><br><span class="line">root      96952      1  0 16:25 ?        00:00:00 nginx: master process ./nginx</span><br><span class="line">nobody    96953  96952  0 16:25 ?        00:00:00 nginx: worker process</span><br><span class="line">root      97742  88062  0 16:25 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure><p><code>nginx</code>默认的端口号是80端口。查看本机的<code>ip</code>地址，然后在windows浏览器的地址栏中，就可以访问<code>nginx</code>的<strong>静态资源</strong>。</p><p>【记得关<code>linux</code>的防火墙哦….，<code>systemctl stop firewalld</code>】</p><p>就可以看到以下界面</p><img src="\image\article\nginx简单命令\image-20220804163517886.png" alt="image-20220804163517886" style="zoom: 43%;" /><p>而且，启动之后，进入<code>nginx</code>根目录，可以看到很多<strong>临时目录</strong>，以<code>_temp</code>结尾的目录都是临时目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon nginx]<span class="comment"># ll</span></span><br><span class="line">total 4</span><br><span class="line">drwx------. 2 nobody root    6 Aug  4 16:20 client_body_temp</span><br><span class="line">drwxr-xr-x. 2 root   root 4096 Aug  3 21:47 conf</span><br><span class="line">drwx------. 2 nobody root    6 Aug  4 16:20 fastcgi_temp</span><br><span class="line">drwxr-xr-x. 2 root   root   40 Aug  3 21:47 html</span><br><span class="line">drwxr-xr-x. 2 root   root   58 Aug  4 16:20 logs</span><br><span class="line">drwx------. 2 nobody root    6 Aug  4 16:20 proxy_temp</span><br><span class="line">drwxr-xr-x. 2 root   root   19 Aug  3 21:47 sbin</span><br><span class="line">drwx------. 2 nobody root    6 Aug  4 16:20 scgi_temp</span><br><span class="line">drwx------. 2 nobody root    6 Aug  4 16:20 uwsgi_temp</span><br></pre></td></tr></table></figure><p>进入<code>logs</code>目录，就可以看到一些日志文件了</p><p><font color="blue" size= 5><strong>重新加载配置文件</strong></font></p><p>当修改<code>Nginx</code>配置文件后，需要重新加载才能生效，可以使用下面命令重写加载配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>在启动<code>Nginx</code>后，修改配置文件后，就可以直接使用上面的命令直接生效，不用重启<code>Nginx</code>。</p><h1 id="Nginx配置文件整体结构"><a href="#Nginx配置文件整体结构" class="headerlink" title="Nginx配置文件整体结构"></a>Nginx配置文件整体结构</h1><p><code>Nginx</code>配置文件(<code>conf/nginx.conf</code>)整体分为三部分:</p><ul><li><strong>全局块</strong>和<code>Nginx</code>运行相关的全局配置</li><li><strong>events块</strong>和网络连接相关的配置</li><li><strong>http块</strong>代理、缓存、日志记录、虚拟主机配置<ul><li>http全局块</li><li>Server块<ul><li>Server全局块</li><li>location块</li></ul></li></ul></li></ul><p>http全局块<br>Server块<br>Server全局块location块</p><blockquote><p>注意: http块中可以配置多个Server块，每个Server块中可以配置多个location块。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#==================全局配置块==================</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"><span class="comment">#==================全局配置块==================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#==================events配置块==================</span></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#==================events配置块==================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================http配置块==============================</span></span><br><span class="line">http &#123;</span><br><span class="line"><span class="comment">#==================http全局配置块==================</span></span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"><span class="comment">#==================http全局配置块==================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#==================Server配置块==================【可以有多个】</span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        <span class="comment">#=============location配置块============【可以有多个】</span></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#=============location配置块============</span></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">   <span class="comment">#=============location配置块============【可以有多个】</span></span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#=============location配置块============</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#==================Server配置块==================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#==============================http配置块==============================</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Nignx一些简单命令和配置文件整体结构的整体结构说明</summary>
    
    
    
    <category term="Nginx" scheme="http://example.com/category/Nginx/"/>
    
    
    <category term="Nginx" scheme="http://example.com/tag/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>初识Nginx</title>
    <link href="http://example.com/post/79465e19.html"/>
    <id>http://example.com/post/79465e19.html</id>
    <published>2022-08-03T13:58:16.000Z</published>
    <updated>2022-08-03T14:31:20.776Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx介绍"><a href="#Nginx介绍" class="headerlink" title="Nginx介绍"></a>Nginx介绍</h1><p><code>Nginx</code>是一款轻量级的web服务器&#x2F;反向代理服务器及电子邮件（<code>IMAP/POP3</code>）代理服务器。其特点是占有内存少，并发能力强，事实上<code>nginx</code>的并发能力在同类型的网页服务器中表现较好，中国大陆使用<code>nginx</code>的网站有:百度、京东、新浪、网易、腾讯、淘宝等。</p><p>官网：<a href="https://nginx.org/">https://nginx.org/</a></p><h1 id="Nginx的下载与安装"><a href="#Nginx的下载与安装" class="headerlink" title="Nginx的下载与安装"></a>Nginx的下载与安装</h1><p><a href="https://nginx.org/en/download.html">下载地址</a></p><p>建议下载稳定版本或者更早的版本，新版本不稳定。</p><p>安装过程：</p><ol><li><p>安装依赖包<code>yum -y install gcc pcre-devel zlib-devel openssl openssl-devel</code>。</p></li><li><p>下载<code>Nginx</code>安装包</p><ol><li><p>第一种方法是，在windows下载好了，上传到<code>linux</code>。</p></li><li><p>第二种方法是，使用<code>wget</code></p><p>没有<code>wget</code>,需要先安装<code>wget</code>,命令：<code>yum install wget</code></p><p>去下载地址，复制下载链接</p><img src="\image\article\初识Nginx\image-20220803212521900.png" alt="image-20220803212521900" style="zoom:50%;" /><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="string">&quot;你复制的下载链接&quot;</span></span><br><span class="line">比如:  wget https://nginx.org/download/nginx-1.18.0.tar.gz</span><br></pre></td></tr></table></figure><p>下载完成后就有一个<code>nginx-1.18.0.tar.gz</code>，压缩包</p></li></ol></li><li><p>解压压缩包<code>tar -zxvf nginx-1.18.0.tar.gz</code>,得到一个目录<code>nginx-1.18.0</code>。</p></li><li><p>进入到<code>nginx-1.18.0</code>这个目录里，命令：<code>cd nginx-1.18.0</code></p></li><li><p>安装到 <code>/usr/local/nginx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /usr/local/nginx</span><br><span class="line">./configure --prefix=/usr/local/nginx    <span class="comment">#安装前的检查工作以及配置环境变量</span></span><br><span class="line">make &amp;&amp; make install   <span class="comment">#编译并安装</span></span><br></pre></td></tr></table></figure><p>安装完成！</p></li></ol><h1 id="Nginx的目录介绍"><a href="#Nginx的目录介绍" class="headerlink" title="Nginx的目录介绍"></a>Nginx的目录介绍</h1><p>查看<code>Nginx</code>目录结果树形</p><p>先安装tree <code>yum install tree</code></p><p>再进入到nginx目录下，<code>cd /usr/local/nginx</code>，然后输入命令查看<code>tree</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- conf<span class="comment">#存放配置文件</span></span><br><span class="line">|   |-- fastcgi.conf</span><br><span class="line">|   |-- fastcgi.conf.default</span><br><span class="line">|   |-- fastcgi_params</span><br><span class="line">|   |-- fastcgi_params.default</span><br><span class="line">|   |-- koi-utf</span><br><span class="line">|   |-- koi-win</span><br><span class="line">|   |-- mime.types</span><br><span class="line">|   |-- mime.types.default</span><br><span class="line">|   |-- nginx.conf<span class="comment">#nginx的配置文件 /conf/nginx.conf</span></span><br><span class="line">|   |-- nginx.conf.default</span><br><span class="line">|   |-- scgi_params</span><br><span class="line">|   |-- scgi_params.default</span><br><span class="line">|   |-- uwsgi_params</span><br><span class="line">|   |-- uwsgi_params.default</span><br><span class="line">|   `-- win-utf</span><br><span class="line">|-- html<span class="comment">#存放静态文件（html,css,js）</span></span><br><span class="line">|   |-- 50x.html<span class="comment">#默认提供的两个静态文件50x.html和index.html</span></span><br><span class="line">|   `-- index.html</span><br><span class="line">|-- logs<span class="comment">#存放日志文件由于刚安装没有启动过，所以是一个空的目录</span></span><br><span class="line">`-- sbin<span class="comment">#存放nginx的脚步文件</span></span><br><span class="line">    `-- nginx<span class="comment">#二进制文件，主要是用来  启动nginx和停止nginx</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Nginx介绍、下载与安装以及目录介绍</summary>
    
    
    
    <category term="Nginx" scheme="http://example.com/category/Nginx/"/>
    
    
    <category term="Nginx" scheme="http://example.com/tag/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>如何不用第三个变量交换值</title>
    <link href="http://example.com/post/c115a0c6.html"/>
    <id>http://example.com/post/c115a0c6.html</id>
    <published>2022-08-03T12:29:06.000Z</published>
    <updated>2022-08-03T13:04:56.535Z</updated>
    
    <content type="html"><![CDATA[<p>今天逛牛客，看见了一个面经，然后就进去看了看。突然看到一个问题：</p><p><font color="blue" size=5>int a&#x3D;5,b&#x3D;3 如何不用第三个变量，调换它俩的值</font></p><p>我第一反应，啊！啊？啊？啊o((⊙﹏⊙))o.。震惊我一百年，不用第三个变量，这怎么变？</p><p>我想到Go语言，有个语法糖，确实不需要第三个变量就可以交换值。难道Java也有？？？</p><p>然后，我就百度搜索了一个，不禁感叹，女少口阿！女少口阿！</p><p>然后特此记录以下，记录两个方法吧</p><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">5</span>,b=<span class="number">3</span>;</span><br><span class="line">b = (a+b)-(a=b);</span><br></pre></td></tr></table></figure><p><code>b = (a+b)-(a=b);</code>，啊这….</p><p>代码从左向右执行，先是<code>a+b</code>，然后是把<code>b</code>赋值给<code>a</code>，最后是<code>a+b-b</code>赋值给b。</p><p>然后就交换了值。巧妙的利用了，代码的执行顺序。真是细他妈给细开门——细到家了！！！</p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>这种方法算是一种算法吧</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">a = b - a; <span class="comment">//b=3;a=5;--&gt;a = -2</span></span><br><span class="line">b = b - a; <span class="comment">//b=3;a=-2;--&gt;b = 5</span></span><br><span class="line">a = b + a; <span class="comment">//b=5;a=-2; ---&gt;a=3</span></span><br><span class="line"><span class="comment">//最后a = 3, b = 5 </span></span><br></pre></td></tr></table></figure><p>这也很妙啊，说不上来的妙。</p><p>这也算是一个编程小tips！我觉得还是方法一好！</p>]]></content>
    
    
    <summary type="html">妙妙妙~</summary>
    
    
    
    <category term="其他" scheme="http://example.com/category/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="妙" scheme="http://example.com/tag/%E5%A6%99/"/>
    
  </entry>
  
  <entry>
    <title>项目实现读写分离</title>
    <link href="http://example.com/post/c6ed6a2c.html"/>
    <id>http://example.com/post/c6ed6a2c.html</id>
    <published>2022-08-03T08:28:28.000Z</published>
    <updated>2022-08-03T09:10:13.356Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么要实现读写分离？"><a href="#为什么要实现读写分离？" class="headerlink" title="为什么要实现读写分离？"></a>为什么要实现读写分离？</h1><p>面对日益增加的系统访问量，数据库的吞吐量面临着巨大瓶颈。对于同一时刻有大量并发读操作和较少写操作类型的应用系统来说，**将数据库拆分为<font color="red">主库</font>和<font color="red">从库</font>**。</p><p><font color="red"><strong>主库</strong></font>负责处理事务性的<font color="blue"><strong>增删改操作</strong></font>。</p><p><font color="red"><strong>从库</strong></font>负责处理<font color="blue"><strong>查询操作</strong></font>。</p><p>能够有效的避免由数据更新导致的行锁，使得整个系统的查询性能得到极大的改善。</p><p><img src="/%5Cimage%5Carticle%5C%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%5Cimage-20220803163902754.png" alt="image-20220803163902754"></p><h1 id="Sharding-JDBC介绍"><a href="#Sharding-JDBC介绍" class="headerlink" title="Sharding-JDBC介绍"></a><code>Sharding-JDBC</code>介绍</h1><p><code>Sharding-JDBC</code>定位为轻量级Java框架，在Java的<code>JDBC</code>层<strong>提供的额外服务</strong>。它使用客户端直连数据库，以jar包形式提供服务，无需额外部署和依赖，可理解为<font color="red"><strong>增强版的JDBC驱动</strong></font>，完全兼容<code>JDBC</code>和各种<code>ORM</code>框架。<br>使用<code>Sharding-JDBC</code>可以在程序中轻松的实现数据库读写分离。</p><ul><li>适用于任何基于<code>JDBC</code>的<code>ORM</code>框架，如:<code>JPA</code>, <code>Hibernate,Mybatis</code>, <code>Spring JDBC Template</code>或直接使用<code>JDBC</code>。</li><li>支持任何第三方的数据库连接池，如:<code>DBCP</code>,<code>C3P0</code>,<code>BoneCP</code>, <code>Druid</code>,<code> HikariCP</code>等。</li><li>支持任意实现<code>JDBC</code>规范的数据库。目前支持<code>MySQL</code>，Oracle，<code>SQLServer</code>，<code>PostgreSQL</code>以及任何遵循<code>SQL92</code>标准的数据库。</li></ul><h1 id="实现读写分离"><a href="#实现读写分离" class="headerlink" title="实现读写分离"></a>实现读写分离</h1><p>首先需要将原来的数据库的数据导出为<code>sql</code>文件。</p><p>然后配置<a href="https://luckydog-tjs.vercel.app/post/e696a246.html"><strong>数据库的主从复制</strong></a>，看我另一篇博客。</p><p>然后再将之前的<code>sql</code>文件，导入到主库中，注意啊，是<font color="red" size=5><strong>主库</strong></font>！！</p><p>步骤：</p><ol><li><p>导入maven坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0-RC1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在配置文件中配置读写分离规则</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#=============================读写分离配置=====================================</span></span><br><span class="line">  <span class="attr">shardingsphere:</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">      <span class="attr">names:</span></span><br><span class="line">        <span class="comment">#数据源名字</span></span><br><span class="line">        <span class="string">master,slave</span><span class="comment">#slave2...</span></span><br><span class="line">      <span class="comment"># 主数据源</span></span><br><span class="line">      <span class="attr">master:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">        <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/reggie?characterEncoding=utf-8</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="comment"># 从数据源</span></span><br><span class="line">      <span class="attr">slave:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">        <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.37.130:3306/reggie?characterEncoding=utf-8</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="comment">#slave2:</span></span><br><span class="line">      <span class="comment">#   tyepe:...</span></span><br><span class="line">      <span class="comment">#   .....</span></span><br><span class="line">    <span class="attr">masterslave:</span></span><br><span class="line">      <span class="comment"># 读写分离配置</span></span><br><span class="line">      <span class="attr">load-balance-algorithm-type:</span> <span class="string">round_robin</span>  <span class="comment">#负载均衡策略：轮询【从库可能有多个】</span></span><br><span class="line">      <span class="comment"># 最终的数据源名称</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">dataSource</span></span><br><span class="line">      <span class="comment"># 主库数据源名称</span></span><br><span class="line">      <span class="attr">master-data-source-name:</span> <span class="string">master</span>   <span class="comment">#主数据源名字</span></span><br><span class="line">      <span class="comment"># 从库数据源名称列表，多个逗号分隔</span></span><br><span class="line">      <span class="attr">slave-data-source-names:</span> <span class="string">slave</span>    <span class="comment">#从数据源名字</span></span><br><span class="line">    <span class="attr">props:</span></span><br><span class="line">      <span class="attr">sql:</span></span><br><span class="line">        <span class="attr">show:</span> <span class="literal">true</span> <span class="comment">#开启SQL显示，默认false</span></span><br></pre></td></tr></table></figure></li><li><p>在配置文件中允许bean定义覆盖配置项</p></li></ol><p>当启动时，<code>DruidDataSource</code>想创建一个数据源对象<code>DataSource</code>。然后<code>sharding-jdbc</code>也想创建一个数据源对象<code>DataSource</code>，这样会产生冲突，可以配置<strong>允许bean定义覆盖配置项</strong>，这样后创建的会覆盖前面的。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">main:</span></span><br><span class="line">        <span class="attr">allow-bean-definition-overriding:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>其他代码啥也不用改。非常简单，不需要写额外的Java代码</p><p>当启动项目查询数据库时，发现<code>WHERE (dish_id = ?) ORDER BY update_time DESC ::: DataSources: slave</code>，就表明配置成功。</p>]]></content>
    
    
    <summary type="html">基于Sharding-JDBC框架实现读写分离</summary>
    
    
    
    <category term="Spring" scheme="http://example.com/category/Spring/"/>
    
    
    <category term="读写分离" scheme="http://example.com/tag/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL主从配置</title>
    <link href="http://example.com/post/e696a246.html"/>
    <id>http://example.com/post/e696a246.html</id>
    <published>2022-08-03T03:05:07.000Z</published>
    <updated>2022-08-03T06:19:44.516Z</updated>
    
    <content type="html"><![CDATA[<p>首先你要保证，<code>windows</code>的mysql的版本和<code>linux</code>的mysql<font color="red"><strong>版本要一致！</strong></font></p><p>我windows版本是<code>8.0.26</code>，linux虚拟机是CentOS7，mysql版本是<code>8.0.30</code>.</p><h1 id="主库配置"><a href="#主库配置" class="headerlink" title="主库配置"></a>主库配置</h1><p>主库是在windows系统。</p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>一般是在C盘的<code>C:\ProgramData\MySQL\MySQL Server 8.0</code>,目录下有个<code>my.ini</code>配置文件。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置server-id</span></span><br><span class="line"><span class="attr">server-id</span>=<span class="number">1</span> </span><br><span class="line"><span class="comment">#开启二进制文件</span></span><br><span class="line"><span class="attr">log-bin</span>=mysql-bin </span><br></pre></td></tr></table></figure><p>在<code>[mysqld]</code>下面，添加以上内容。<code>server-id</code>是服务器唯一id，可以是其他数字，但不能和从库的<code>server-id</code>重复!!</p><p>只要不重复，啥数字都可以。</p><h2 id="重启mysql服务"><a href="#重启mysql服务" class="headerlink" title="重启mysql服务"></a>重启mysql服务</h2><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><p><code>我的电脑</code>,右键选择<code>管理</code>。</p><img src="\image\article\MYSQL主从配置\image-20220803112549738.png" alt="image-20220803112549738" style="zoom:67%;" /><p>在服务名称上，右键 <code>停止</code>再<code>启动</code>。</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>以<code>管理员身份</code>运行<code>命令提示符</code>。</p><img src="\image\article\MYSQL主从配置\image-20220803112728812.png" alt="image-20220803112728812" style="zoom:50%;" /><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop mysql80   #或者<span class="built_in">net</span> stop mysql   停止服务</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> mysql80 #或者<span class="built_in">net</span> <span class="built_in">start</span> mysql开启服务</span><br></pre></td></tr></table></figure><h2 id="创建从服务器的用户和权限"><a href="#创建从服务器的用户和权限" class="headerlink" title="创建从服务器的用户和权限"></a>创建从服务器的用户和权限</h2><h3 id="方法一：-1"><a href="#方法一：-1" class="headerlink" title="方法一："></a>方法一：</h3><p><code>win+R</code>输入<code>cmd</code>，进入命令行，登录mysql</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">#然后输入密码</span><br></pre></td></tr></table></figure><p>然后使用命令行创建用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create user &#x27;用户名&#x27;@&#x27;%&#x27;  identified by &#x27;密码&#x27;;#创建用户</span><br><span class="line">grant all privileges on *.* to &#x27;用户名&#x27;@&#x27;%&#x27;;#授予权限</span><br><span class="line"></span><br><span class="line">#比如</span><br><span class="line">#create user &#x27;test_user&#x27;@&#x27;%&#x27;  identified by &#x27;123456&#x27;;</span><br><span class="line">#grant all privileges on *.* to &#x27;test_user&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><p>进入<code>navicat</code>，</p><img src="\image\article\MYSQL主从配置\image-20220803113429776.png" alt="image-20220803113429776" style="zoom: 67%;" /><p>按以下格式创建用户</p><img src="\image\article\MYSQL主从配置\image-20220803113545220.png" alt="image-20220803113545220" style="zoom: 67%;" /><p>用户名和密码改成你自己的，其他的按照这格式就行。</p><img src="\image\article\MYSQL主从配置\image-20220803113643506.png" alt="image-20220803113643506" style="zoom:50%;" /><p>服务器权限<font color="red"><strong>全选</strong></font>，因为我已经创建过了就不全选创建了。最后保存就好了。</p><p>最后你可以用以下命令，试试新建的用户能不能登录</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u &#x27;你刚创建的用户名&#x27; -p&#x27;密码&#x27;</span><br><span class="line">#比如： mysql -u test_user -p <span class="number">123456</span></span><br></pre></td></tr></table></figure><p>能登录就是成功了。不能登录就看看你创建用户的时候，<strong>主机</strong>那块是不是<code>%</code>。<code>%</code>表示，任何服务器都可以连接。</p><p><code>create user &#39;用户名&#39;@&#39;%&#39;  identified by &#39;密码&#39;;</code>是这个%哦。</p><h2 id="查看主服务器状态"><a href="#查看主服务器状态" class="headerlink" title="查看主服务器状态"></a>查看主服务器状态</h2><p><code>win+R</code>输入<code>cmd</code>，进入命令行，登录mysql</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">#然后输入密码</span><br></pre></td></tr></table></figure><p>输入<code>show master status;</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+----------------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File                       | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+----------------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| DESKTOP-GQI06FR-bin.<span class="number">000014</span> |      <span class="number">531</span> |              |                  |                   |</span><br><span class="line">+----------------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0</span>.<span class="number">00</span> sec)</span><br></pre></td></tr></table></figure><p>记住这个<code> DESKTOP-GQI06FR-bin.000014</code>和<code>531</code>，待会配置从库使用，而且也<font color="red"><strong>不要再有任何mysql操作了</strong></font>，否则这个是会变的。</p><h1 id="从服务器配置"><a href="#从服务器配置" class="headerlink" title="从服务器配置"></a>从服务器配置</h1><p>从服务器是Linux</p><h2 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h2><p> 修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><p>在[msqld]下面添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置server-id</span></span><br><span class="line">server-id=2</span><br></pre></td></tr></table></figure><p>只要保证<code>server-id</code>是唯一的就行，与主库和其他从库id不同就行。</p><h2 id="重启myql服务"><a href="#重启myql服务" class="headerlink" title="重启myql服务"></a>重启myql服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><h2 id="配置从库"><a href="#配置从库" class="headerlink" title="配置从库"></a>配置从库</h2><p><code>win+R</code>输入<code>cmd</code>，进入命令行，登录mysql</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">#然后输入密码</span><br></pre></td></tr></table></figure><p>然后执行以下sql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host=&#x27;192.168.20.1&#x27;,master_port=3306,master_user=&#x27;test_user&#x27;,master_password=&#x27;123456&#x27;,master_log_file=&#x27;DESKTOP-GQI06FR-bin.000014&#x27;,master_log_pos=531;</span><br></pre></td></tr></table></figure><ol><li><code>master_host</code>对应主服务器的IP地址。</li><li><code>master_port</code>对应主服务器的端口。</li><li><code>master_log_file</code>对应show master status显示的File列：DESKTOP-GQI06FR-bin.000014。</li><li><code>master_log_pos</code>对应show master status显示的Position列：531。</li></ol><p>然后开启主从复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start slave;  #开启主从复制</span><br><span class="line">stop slave;#关闭主从复制</span><br></pre></td></tr></table></figure><h1 id="查看是否配置成功"><a href="#查看是否配置成功" class="headerlink" title="查看是否配置成功"></a>查看是否配置成功</h1><p>在从服务器上执行以下SQL语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show slave status;</span><br></pre></td></tr></table></figure><p>然后能看到<code>Waiting for source to send event</code>，就表示配置成功。</p><p>或者在windows，打开<code>navicat</code></p><p>在<font color="red"><strong>主库</strong></font>上新建一个数据库，看从库是否也新建一个。</p>]]></content>
    
    
    <summary type="html">主库windows,从库linux虚拟机</summary>
    
    
    
    <category term="Mysql" scheme="http://example.com/category/Mysql/"/>
    
    
    <category term="MySql" scheme="http://example.com/tag/MySql/"/>
    
  </entry>
  
  <entry>
    <title>乘积小于k的子数组</title>
    <link href="http://example.com/post/d09e42a4.html"/>
    <id>http://example.com/post/d09e42a4.html</id>
    <published>2022-08-01T13:21:39.000Z</published>
    <updated>2022-08-02T13:21:47.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>给你一个整数数组 <code>nums</code> 和一个整数 <code>k</code> ，请你返回子数组内所有元素的乘积<font color="red"><strong>严格小于 <code>k</code></strong></font> 的连续子数组的数目。</p><p>示例 1：</p><blockquote><p>输入：nums &#x3D; [10,5,2,6], k &#x3D; 100<br>输出：8<br>解释：8 个乘积小于 100 的子数组分别为：[10]、[5]、[2],、[6]、[10,5]、[5,2]、[2,6]、[5,2,6]。<br>需要注意的是 [10,5,2] 并不是乘积小于 100 的子数组。</p></blockquote><p>示例 2：</p><blockquote><p>输入：nums &#x3D; [1,2,3], k &#x3D; 0<br>输出：0</p></blockquote><p>提示: </p><ul><li>1 &lt;&#x3D; nums.length &lt;&#x3D; 3 * 104</li><li>1 &lt;&#x3D; nums[i] &lt;&#x3D; 1000</li><li>0 &lt;&#x3D; k &lt;&#x3D; 106</li></ul><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode.cn/problems/subarray-product-less-than-k">https://leetcode.cn/problems/subarray-product-less-than-k</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><p>这道题，我属实有心理阴影….在我刚开始做题的时候…</p><img src="/image/article/乘积小于k的子数组/a.png" alt="a" style="zoom:67%;" /><p>一遍一遍提交，都不通过…提交的次数比这个多，只不过没有显示全【红色的】，绝望的一批 (ノ｀Д)ノ，颇有想掀桌子的冲动，然后今天又碰到这题了，虽然一次通过了，但仍心有余悸…o(≧口≦)o【仍想了挺久的】然后记录一下题解…整理一下思路</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>首先这个题要求的是<font color="red"><strong>乘积</strong></font>,就不能用<code>数组前缀乘积</code>了，因为一直乘积可能会超过int的范围，虽然可以用 长整型<code>long</code>，但不建议这么用。【这是我第一次做题的时候的思路，还是太年轻，因为每次看到<code>数组滑窗</code>，总会想到<code>前缀和</code>】</p><p>既然是滑窗，就得定义窗口左右的指针</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> -<span class="number">1</span>,right = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>初始化<code>窗口的乘积</code>以及<code>连续子数组的数目</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">mult</span> <span class="operator">=</span> nums[<span class="number">0</span>];  <span class="comment">//注意，数组的长度是大于等于1的</span></span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><ol><li><p>当窗口的乘积&lt;k时</p><ol><li>连续子数组的数目 加上  窗口的大小<code>result+=(right-left);</code>【？为什么加上窗口的大小呢，稍后图示说明，感觉这个应该算是题的一个难点吧】</li><li>然后右边扩大窗口 <code>right++;mult*=nums[right];</code></li></ol></li><li><p>当窗口乘积&gt;&#x3D;k时</p><ol><li><p>左边窗口缩小 <code>left++;mult/=nums[left];</code></p><p>注意，有可能这个左边窗口缩小到<code>left&gt;=right</code>,那就需要扩大右边的窗口了<code>right++;mult*=nums[right];</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(left&gt;=right)&#123;</span><br><span class="line">    right++;</span><br><span class="line">    mult*=nums[right];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><p>以<code>nums = [10,5,2,6], k = 100</code>为例。</p><img src="\image\article\乘积小于k的子数组\1.PNG" alt="1" style="zoom:50%;" /><p><code>result+=1</code>，子数组是<code>[10]</code></p><img src="\image\article\乘积小于k的子数组\2.PNG" alt="2" style="zoom:50%;" /><p><code>result+=2</code>，子数组是<code>[10,5],[5]</code></p><img src="\image\article\乘积小于k的子数组\3.PNG" alt="3" style="zoom:50%;" /><p>窗口子数组就没有严格小于k，缩小窗口。</p><img src="\image\article\乘积小于k的子数组\4.PNG" alt="4" style="zoom:50%;" /><p><code>result+=2</code>，子数组是<code>[5,2],[2]</code></p><img src="\image\article\乘积小于k的子数组\5.PNG" alt="5" style="zoom:50%;" /><p><code>result+=2</code>，子数组是<code>[5,2,6],[2,6],[6]</code></p><p>由于窗口已经到达边界，所以结束，<code>result=8</code></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">numSubarrayProductLessThanK</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> -<span class="number">1</span>,right = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mult</span> <span class="operator">=</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (right&lt;nums.length)&#123;</span><br><span class="line">            <span class="keyword">if</span>(mult&lt;k)&#123;</span><br><span class="line">                result+=(right-left);</span><br><span class="line">                right++;</span><br><span class="line">                mult*=nums[right];</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                left++;</span><br><span class="line">                mult/=nums[left];</span><br><span class="line">                <span class="keyword">if</span>(left&gt;=right)&#123;</span><br><span class="line">                    right++;</span><br><span class="line">                    mult*=nums[right];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但仍然有个问题，你可以把上述代码运行一下，不出意外的话，应该是出意外了。嘿嘿嘿ο(&#x3D;•ω＜&#x3D;)ρ⌒☆</p><p><code>java.lang.ArrayIndexOutOfBoundsException</code>数组越界了。在循环过程中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (right&lt;nums.length)&#123;</span><br><span class="line">    <span class="keyword">if</span>(mult&lt;k)&#123;</span><br><span class="line">        result+=(right-left);  <span class="comment">//假如此时right = nums.length-1</span></span><br><span class="line">        right++;               <span class="comment">//right = nums.length</span></span><br><span class="line">        mult*=nums[right];      <span class="comment">//nums[nums.length]就会越界。</span></span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        left++;</span><br><span class="line">        <span class="keyword">if</span>(left&gt;=right)&#123;</span><br><span class="line">            right++;</span><br><span class="line">            mult*=nums[right];  <span class="comment">//这也同样</span></span><br><span class="line">        &#125;</span><br><span class="line">        mult/=nums[left];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以需要把<code>mult*=nums[right];</code>，改为<code>if(right&lt;nums.length) mult*=nums[right];</code>。</p><h1 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">numSubarrayProductLessThanK</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> -<span class="number">1</span>,right = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mult</span> <span class="operator">=</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (right&lt;nums.length)&#123;</span><br><span class="line">            <span class="keyword">if</span>(mult&lt;k)&#123;</span><br><span class="line">                result+=(right-left);</span><br><span class="line">                right++;</span><br><span class="line">                <span class="keyword">if</span>(right&lt;nums.length) mult*=nums[right];</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                left++;</span><br><span class="line">                mult/=nums[left];</span><br><span class="line">                <span class="keyword">if</span>(left&gt;=right)&#123;</span><br><span class="line">                    right++;</span><br><span class="line">                    <span class="keyword">if</span>(right&lt;nums.length) mult*=nums[right];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">滑动窗口</summary>
    
    
    
    <category term="算法" scheme="http://example.com/category/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="LeetCode" scheme="http://example.com/tag/LeetCode/"/>
    
  </entry>
  
</feed>
